/**
 * 
 * 
 * 1.复习
 * Vue中组件之间通信的方式----面试
 * 1) props: 父级组件向子级组件传递数据,同时子级组件也可以向父级组件传递数据
 *  父--->子 通过强制绑定数据的方式,然后,在属性中存储数据
 *  子--->父 通过强制绑定数据的方式,然后,在属性中存储的数据是一个函数,子级组件在调用函数的时候传入参数,父级组件可以使用
 * 2) 自定义事件 :父级组件向子级组件传递数据
 *   通过@自定义事件,向子级组件中传递的是事件,子级组件中使用$emit()分发事件,也可以传入该事件的回调函数中需要使用到的参数
 * 3) PubSub:任意组件直接进行传递数据,它不属于Vue,是一个独立存在的js库
 * 4) 事件总线:是在Vue的原型上,绑定一个属性,该属性中存储的是一个Vue的一个实例,任意组件之间可以通信,通过$on绑定事件,通过$emit分发事件,可以通过$off解绑事件
 * 5) 插槽:具名插槽(命名插槽):有名字的插槽(slot标签上有name属性)，slot这个标签实际上Vue中的一个内置组件,可以实现父子组件直接传递数据
 * 2.在浏览器中如何缓存数据
 *  1) 使用localStorage---持久缓存---关闭浏览器再次打开浏览器数据依然存在----存储在本地中
 *  20 使用sessionStorage---临时缓存--关闭浏览器再次打开浏览器数据已经消失---存储在内存中'
 * 
 * 3.自定义事件总线和自定义PubSub,主要是里面的原理,如何实现一些js库中的原理代码(封装,提升自己作为程序员为他人提供的js库)
 *  你有没有自己封装过一些js库
 *  格式化日期的方法,缓存动画,自定义事件,自定义PubSub,函数的节流,函数的防抖
 * 
 * 
 * 2.介绍今天课程内容
 * 1如果在Vue中发送异步请求
 *  1) vue-resource
 *  2) axios
 *  3) 获取github用户信息的案例
 * 2 vue-router 路由器
 * 3 Vuex
 * 4 Vuex案例
 * 5 源码分析
 * 
 * 
 * 
 * 3.开始讲解
 * 
 * 
 * 
 */