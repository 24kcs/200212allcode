/**
 * 
 * 1. 先复习
 * 2. 介绍今天的课程
 * 3. 开始讲解
 * 
 * 
 * 
 * 
 * 1. 复习
 * 面试题: 
 *  1) 说说对Vue的理解
 *  渐进式的JavaScript框架,借鉴angular的模板和数据绑定技术,借鉴react的组件化和虚拟DOM技术
 *  作者:尤雨溪
 *  模版的语法:
 *    插值语法:{{表达式}} ,多数情况用在成对的标签中间
 *    双向数据绑定:v-model指令,一般用在表单标签上
 *    强制数据绑定:v-bind指令,简写 :属性="表达式" ,动态的把数据绑定到某个标签的某个属性上
 *  如何在Vue中获取DOM元素  $refs这个属性(实际上也是个对象)
 *  渲染指令: v-if(v-else,v-els-if),v-show
 *    v-if特点:使用了v-if指令的标签,在DOM树中有可能不存在,可以控制标签显示或者不显示
 *    v-show特点:是用了v-show指令的标签,在DOM树中一直存在,通过控制display:none的方式来显示或者隐藏标签
 *  计算属性和监视:
 *    计算属性:当某个属性的值发生变化,相关联的属性值也要自动的发生变化,此时使用计算属性
 *    监视:某个数据发生变化,需要做一些事件的时候,此时使用监视
 *  可以通过class和style的两种方式来操作样式
 *  class   ------>对象的方式,数组的方式
 *  style   ------->对象的方式,数组的方式
 *  列表的渲染
 *    v-for指令,可以遍历数组,也可以遍历对象,遍历多个数据的时候去使用
 * 
 *  创建Vue的实例的时候需要有配置对象
 *  el:----->需要一个选择器(id选择器)
 *  data:--->对象,用来定义状态数据的
 *  methods---->对象,里面主要用来定义方法的,回调函数或者是事件的回调
 *  computed--->对象,里面主要用来定义get属性或者set和get属性(也是定义方法,和属性的值发生变化相关)
 *  watch---->对象,里面主要是用来定义方法,主要是根据数据变化需要做具体的操作
 *    
 * 
 * 
 * 
 * 
 * 
 * 2. 课程介绍
 *  列表渲染
 *  事件处理
 *  表单的数据绑定
 *  Vue的生命周期
 *  过渡和动画
 *  过滤器
 *  其他的指令
 *  插件的使用及自定义插件的方式及思路
 *  Vue中的key属性的解释和理解----虚拟DOM渲染的效率的问题
 * 
 * 
 * 
 * 
 * 
 * 
 */