/**
 * 
 * 1. 复习
 * Vue的源码分析
 * 
 * Vue中模版解析之表达式(插值语法)
 *  所谓的插值语法的解析:在实例化Vue的时候,内部会创建一个编译对象,并传入当前的html容器的选择器,及vm实例对象
 *     编译对象内部会根据选择器获取html中的容器对象,同时保存vm实例对象,进行编译操作,先创建一个虚拟DOM(文档碎片对象),然后html容器内部所有的节点全部的扔进文档碎片对象中,紧接着遍历里面所有的节点,并且获取节点文本内容及定义插值语法的正则表达式,判断当前的节点是标签还是文本,如果是文本则再判断当前的文本内容与插值语法的正则是否匹配,
 *     如果是标签暂且不考虑,如果是文本并且与插值语法匹配,内部先获取当前的文本节点,提取出插值语法中的表达式
 *     下一步通过vm实例对象获取当前这个表达式的值,在bind方法内部获取updater对象中相关的解析插值语法的方法,把文本节点通过textContent属性替换成表达式的值,这些操作都是在内存中的文档碎片对象中进行操作,结束后,最后把文档碎片对象重新的扔进到html容器中即可
 * 
 * 
 * Vue中模版解析之事件指令
 * 
 * 
 *  创建Vue实例对象的时候,会进行模版解析操作,在模版编译的时候的内部,创建文档碎片对象(虚拟DOM),然后把html容器中所有的节点全部的放在文档碎片对象中,遍历所有的子节点,判断当前节点是不是标签节点,
    如果是标签节点,获取当前节点上所有的属性,判断每个属性是不是指令,如果是指令,还要判断当前的指令是事件指令还是普通指令.如果是事件指令,获取该指令的名字，和值
    去掉v-开头的指令,然后通过vm实例对象及判断vm对象下是否有methods对象,如果有则再获取methods中的对应的回调函数,最后通过addEventListener()方法为当前的标签节点,绑定对应的事件,最终把该标签节点上所有的属性全部的删除
 * 
 * 
 * Vue中模版解析之普通指令
 * 
 *  实例化Vue的时候,传入配置对象(el,data,methods...)
     创建编译对象,传入el及vm实例对象,内部开始模版解析(编译),创建文档碎片对象,把html容器中所有的节点全部的扔进文档碎片对象中,内部遍历所有的节点,判断当前的节点是不是标签,如果是标签,获取该标签上所有的属性,遍历所有的属性,判断当前的属性是不是指令,如果是指令再次判断是不是普通指令,如果是普通指令,进入到bind方法内部,找到对应的updater对象中textUpdater方法,把表达式的值赋值给当前的标签节点的textContent属性,进行替换,最后把该标签上所有的属性全部的删除------v-text这个普通指令的说明
     v-html v-class 都加上
 * 
 * 
 * Vue中的数据劫持及数据绑定
 * 
 *  只要data对象中有一个属性,就会创建一个dep对象
    遍历data对象中所有的属性,产生多个dep对象
    每创建一个dep对象,该对象内部就会产生一个新的uid和subs数组
    当dep对象产生后,会再次的调用observe方法,内部判断,如果当前的data对象中的属性的值还是一个对象,那么就再次创建劫持对象,如果不是对象,则不再创建劫持对象
    如果再次创建劫持对象,就会再次遍历data对象中的这个对象,再次创建dep对象
    data对象中有一个属性msg,那么就会创建一个dep对象
    data对象中有一个属性(obj:{name:'小明'}------data:{obj:{name:'小明'}})----创建两个dep对象
    Object.defineProperty方法内部实际上是把vm.data对象中的所有的属性一个一个的遍历出来,然后一个一个的添加到observe(劫持)对象的data对象中(原来的关系observe.data=vm.data----->把vm.data的地址(引用给了observe.data)同时指向了一个地址),但是现在是observe.data中就有了一份和vm.data中相同的属性

    一个属性会产生一个dep对象(dep对象中有uid和subs数组)----很关键
    data中有多少个属性,就会产生多少个dep对象----这是一种依赖关系
    一个表达式会产生一个watcher对象(depIds对象)-----很关键
    html模版中有多少个表达式,就会产生多少个的watcher对象

    劫持数据的时候,根据属性的个数产生对应个数的dep对象
    模版解析的时候,根据表达式的个数产生对应个数的watcher对象

    dep对象和watcher对象的关系-----Vue源码中最复杂的问题就搞定了

    dep对象(uid和subs数组)和watcher对象(depIds对象)的关系

    一对一的关系:一个dep对应一个watcher:data中定义了一个属性,html模版中用了一个表达式
    一对多的关系:一个dep对应多个watcher:data中定义了一个属性,html模版中用了多个表达式
    多对一的关系:多个dep对应一个watcher:data中定义了多个属性,html模版中用了一个表达式
    多对多的关系:多个dep对应多个watcher:data中定义了多个属性,html模版中用了多个表达式

    dep对象和watcher对象的关系如何建立
    劫持的数据的时候仅仅是产生了dep对象,监视的时候才会创建watcher对象,并建立关系(模版解析的过程中需要获取表达式的值的时候开始建立关系)
 * 
 * 
 * 2. 课程介绍
 *  1)数据劫持-数据绑定 
 *  2)数据的双向绑定
 *  3)图标字体的使用
 *  4)stylus的使用及小案例
 *  5)下载脚手架3并分级内部比较重要的源码---结合脚手架2一起讲解
 *  6)路由传参的不同方式:params,query,meta,props的三种方式(布尔,对象,回调函数)
 *  7)前台电商项目(脚手架3)
 *  
 * 
 * 
 * 
 * 3. 开始讲解
 * 
 * 
 * 
 * 
 */